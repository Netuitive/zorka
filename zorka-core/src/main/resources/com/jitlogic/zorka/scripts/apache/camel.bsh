/**
 * Copyright 2012-2015 Rafal Lewczuk <rafal.lewczuk@jitlogic.com>
 *
 * ZORKA is free software. You can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * ZORKA is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * ZORKA. If not, see <http://www.gnu.org/licenses/>.
 */

// This file contains agent configurations for various unqualified libraries

zorka.require("tracer.bsh", "apache/apache.bsh");


__apache_camel() {

    _trace = zorka.boolCfg("tracer");

    spy.add(spy.instrument("CAMEL_PROCESSOR")
        .onEnter(spy.fetchArg("THIS", 0), spy.fetchArg("EXCH", 1),
            _trace ? spy.subchain(
                tracer.begin("CAMEL"),
                tracer.formatAttr("CONTEXT_NAME", "${EXCH.context.name}"),
                //tracer.formatAttr("PROPS", "${EXCH.properties}"),
                tracer.formatAttr("CLASS", "${THIS.class.name}")
            ) : null)
        .include(
            spy.byInterfaceAndMethod("org.apache.camel.Processor", "process"),
            spy.byInterfaceAndMethod("org.apache.camel.Producer", "process"),
            spy.byMethod("org.apache.camel.component.http.HttpProducer", "process"),
            spy.byMethod("org.apache.camel.component.direct.DirectProducer", "process"),
            spy.byMethod("org.apache.camel.component.direct.DirectBlockingProducer", "process"),
            spy.byMethod("org.apache.camel.component.directvm.DirectVmProducer", "process"),
            spy.byMethod("org.apache.camel.component.directvm.DirectVmBlockingProducer", "process")
        ));

    return this;
}


apache_camel = __apache_camel();
